===============================
The 0-add_integer.py test cases
===============================

#run with the command 'python3 -m doctest -v ./tests/0-add_integer.txt'
IMPORT METHOD:
	>>> add_integer = __import__('0-add_integer').add_integer

SUCCESS CASES:
Test signed and unsigned int and float values:
	>>> add_integer(1, 2)
	3
	>>> add_integer(100, -2)
	98
	>>> add_integer(2)
	100
	>>> add_integer(100.3, -2)
	98
	>>> add_integer(1.3, -0.5)
	1
	>>> add_integer(0, 0)
	0

Test the default b=98:
	>>> add_integer(1)
	99

FAIL CASES:
Test no args:
	>>> add_integer(None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer
	>>> add_integer(None, None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Test non integer and float values:
	>>> add_integer(3, "Hello")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer
	>>> add_integer("Hello")
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Test no arguments:
	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'
